<Window x:Class="PhoVodKEdit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PhoVodKEdit"
        mc:Ignorable="d"
        Title="MainWindow" Height="950" Width="1800"
        Background="{Binding Applied.Colors.Main}">
    <Window.Resources>
        <Style TargetType="TabItem">
            <Setter x:Name="TabItemSetter" Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{Binding Applied.Colors.Background}"
                                CornerRadius="3,3,0,0" Width="150" Height="30" >
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"
                                                          ContentSource="Header" Margin="10,2"
                                                          TextBlock.Foreground="White" TextBlock.FontWeight="Bold"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{Binding Applied.Colors.Secondary}" />
                                <Setter TargetName="Border" Property="TextBlock.FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{Binding Applied.Colors.Background}" />
                                <Setter TargetName="Border" Property="TextBlock.FontWeight" Value="Normal" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{Binding Applied.Colors.Main}" />
            <Setter Property="Header" Value="{Binding Applied.Colors.Foreground}" />
        </Style>

        <Style TargetType="DockPanel">
            <Setter Property="Margin" Value="3" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="24" />
        </Style>

        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{Binding Applied.Colors.Foreground}" />
            <!--<Setter Property="MinHeight" Value="30" />-->
            <Setter Property="FontSize" Value="{Binding Applied.Font.Size}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding Applied.Colors.Secondary}" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="2,0" />
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Foreground" Value="{Binding Applied.Colors.Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Background="{Binding Applied.Colors.Main}"
                                BorderBrush="{Binding Applied.Colors.Main}" BorderThickness="1"
                                VerticalAlignment="Center">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="25" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>

                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{Binding Applied.Colors.Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>

                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header"/>

                                <!-- Content for the menu IGT -->
                                <ContentPresenter Grid.Column="2"
                                Margin="8,1,8,1"
                                x:Name="IGTHost"
                                ContentSource="InputGestureText"
                                VerticalAlignment="Center"/>

                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{Binding Applied.Colors.Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>

                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" Background="{Binding Applied.Colors.Main}"
                                            BorderBrush="{Binding Applied.Colors.Secondary}" BorderThickness="1"
                                            Padding="2,2,2,2" MinWidth="200">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>

                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>

                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>

                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>

                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>

                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <!-- The GlyphPanel contains the CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="{Binding Applied.Colors.Secondary}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{Binding Applied.Colors.Secondary}" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="false">
                                <Setter Property="Background" Value="{Binding Applied.Colors.Main}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="Transparent" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SemiTransparentThinScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0"/>

                            <ScrollBar Grid.Column="1"
                     Opacity="0.5"
                     Name="PART_VerticalScrollBar"
                     Value="{TemplateBinding VerticalOffset}"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Width="10"
                     MinWidth="10"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <ScrollBar Name="PART_HorizontalScrollBar"
                     Opacity="0.5"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Grid.Column="0"
                     Height="10"
                     MinHeight="10"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="GridSplitter">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Setter Property="Background" Value="{Binding Applied.Colors.Secondary}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{Binding Applied.Colors.Foreground}" />
            <Setter Property="FontSize" Value="{Binding Applied.Fonts.Size}" />
        </Style>
    </Window.Resources>

    <Grid Background="{Binding Applied.Colors.Main}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <!--<ToolBar Grid.Row="0" Background="Transparent"/>-->
        <DockPanel x:Name="Toolbar" Background="{Binding Applied.Colors.Main}">
            <Menu>
                <MenuItem Header="{Binding Applied.Language.MENU_FILE}">
                    <MenuItem Header="{Binding Applied.Language.MENU_FILE_NEW}" Click="MenuItem_NewClick"/>
                    <MenuItem Header="{Binding Applied.Language.MENU_FILE_OPEN}" Click="MenuItem_OpenClick"/>
                    <MenuItem Header="{Binding Applied.Language.MENU_FILE_SAVE}" Click="MenuItem_SaveClick"/>
                    <MenuItem Header="{Binding Applied.Language.MENU_FILE_SAVE_AS}"/>
                    <MenuItem Header="{Binding Applied.Language.MENU_FILE_CLOSE}" Click="MenuItem_CloseClick"/>
                </MenuItem>
            </Menu>
            <Menu>
                <MenuItem Header="{Binding Applied.Language.MENU_EDIT}">
                    <MenuItem Header="{Binding Applied.Language.MENU_EDIT_COPY}"/>
                    <MenuItem Header="{Binding Applied.Language.MENU_EDIT_PASTE}"/>
                    <MenuItem Header="{Binding Applied.Language.MENU_EDIT_CUT}"/>
                </MenuItem>
            </Menu>
            <Menu>
                <MenuItem Header="Menu3">
                    <MenuItem Header="MenuItem1"/>
                </MenuItem>
            </Menu>
            <Menu>
                <MenuItem Header="Menu4">
                    <MenuItem Header="MenuItem1"/>
                </MenuItem>
            </Menu>
        </DockPanel>

        <StatusBar x:Name="StatusBar" Grid.Row="4" Grid.ColumnSpan="3" Background="{Binding Applied.Colors.Background}" Margin="0,0,0.4,-0.2" Padding="0"/>

        <GridSplitter  Margin="0" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="4"
                      VerticalAlignment="Stretch" HorizontalAlignment="Center" />

        <!-- <GridSplitter Grid.Row="2" Grid.Column="2" Height="4" 
                      VerticalAlignment="Center" HorizontalAlignment="Stretch" /> -->

        <TabControl Grid.Row="1" x:Name="TabControl" BorderThickness="0" Margin="0,0,0,3"
                    Background="{Binding Applied.Colors.Main}">
            <!--
            <TabItem MouseDown="TabItem_MouseDown" Header="Tabitem 1">
                <Border BorderThickness="0,0,1,1" BorderBrush="{Binding Applied.Colors.Border}" Margin="0,-2,-2,-2">
                    <Border BorderThickness="3,3,0,0" BorderBrush="{Binding Applied.Colors.Secondary}">
                        <Grid Background="{Binding Applied.Colors.Background}" Margin="0,0,0,0">
                            <Button Content="Dark Colors" HorizontalAlignment="Left" Margin="91,76,0,0" VerticalAlignment="Top" Width="316" Height="127" Click="Button_Click"/>
                            <Button Content="Light Colors" HorizontalAlignment="Left" Margin="479,76,0,0" VerticalAlignment="Top" Width="316" Height="127" Click="Button_Click_1"/>
                            <ToolBarTray HorizontalAlignment="Left" Height="100" Margin="247,321,0,0" VerticalAlignment="Top" Width="198"/>
                            <ToolBarPanel HorizontalAlignment="Left" Height="100" Margin="503,348,0,0" VerticalAlignment="Top" Width="312">
                                <ToolBar HorizontalAlignment="Left" Height="100" Width="312">
                                    <Menu>
                                        <MenuItem Header="Kenyér">
                                            <MenuItem Header="Vajas kenyér!"/>
                                        </MenuItem>
                                    </Menu>
                                </ToolBar>
                            </ToolBarPanel>
                        </Grid>
                    </Border>
                </Border>
            </TabItem>
            <TabItem Header="TabItem2" MouseDown="TabItem_MouseDown">
                <Border BorderThickness="0,0,1,1" BorderBrush="{Binding Applied.Colors.Border}" Margin="0,-2,-2,-2">
                    <Border BorderThickness="3,3,0,0" BorderBrush="{Binding Applied.Colors.Secondary}">
                        <Grid Background="{Binding Applied.Colors.Background}" Margin="0,0,0,0"/>
                    </Border>
                </Border>
            </TabItem>
            -->
            <TabItem Header="+" MouseDown="TabItem_MouseDown" Width="30" MouseLeftButtonUp="TabItem_MouseLeftButtonUp">
                <Border BorderThickness="0,0,1,1" BorderBrush="{Binding Applied.Colors.Border}" Margin="0,-2,-2,-2">
                    <Border BorderThickness="3,3,0,0" BorderBrush="{Binding Applied.Colors.Secondary}">
                        <Grid Background="{Binding Applied.Colors.Background}" Margin="0">
                            <StackPanel x:Name="NewScreens"></StackPanel>
                        </Grid>
                    </Border>
                </Border>
            </TabItem>

        </TabControl>

        <Border Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" BorderThickness="1" Margin="0,3,3,3" BorderBrush="{Binding Applied.Colors.Border}" Background="{Binding Applied.Colors.Background}">
            <Grid x:Name="EffectsGrid" SizeChanged="EffectsGrid_SizeChanged">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" BorderBrush="{Binding Applied.Colors.Border}" BorderThickness="0,0,0,1" Background="{Binding Applied.Colors.Main}">
                    <Grid>
                        <Label Foreground="{Binding Applied.Colors.Foreground}" HorizontalAlignment="Center">Feltétek</Label>
                        <Label x:Name="TotalEffectTimerLabel" HorizontalAlignment="Right" ToolTip="Total Eeffect Apply time...">- ms</Label>
                    </Grid>
                </Border>
                <ScrollViewer x:Name="LayersScroller" VerticalScrollBarVisibility="Auto" Grid.Row="1" MaxHeight="200">
                    <StackPanel x:Name="LayersPanel" Margin="5" VerticalAlignment="Top">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" >Some text</Button>
                            <ScrollViewer Visibility="Collapsed" Grid.Row="1" Grid.Column="1" VerticalScrollBarVisibility="Auto" >
                                <StackPanel Margin="5" VerticalAlignment="Top">
                                    <Button>Some text</Button>
                                    <Button>Some text</Button>
                                </StackPanel>
                            </ScrollViewer>
                            <Border Grid.Row="2" Grid.Column="1" BorderBrush="{Binding Applied.Colors.Border}" BorderThickness="0,1,0,0" MinHeight="30">
                                <Button Content="Add effect" Click="AddEffect" HorizontalAlignment="Center" Margin="3" Width="150" />
                            </Border>
                        </Grid>
                        
                    </StackPanel>
                </ScrollViewer>
                <Border Grid.Row="2" BorderBrush="{Binding Applied.Colors.Border}" BorderThickness="0,1,0,0" MinHeight="30">
                    <Button Content="Add layer" Click="NewLayer" HorizontalAlignment="Center" Margin="3" Width="150" Height="30"/>
                </Border>
            </Grid>
        </Border>
        
        <!--
        <Border Grid.Row="3" Grid.Column="2" BorderThickness="1" Margin="0,0,3,3" BorderBrush="{Binding Applied.Colors.Border}" Background="{Binding Applied.Colors.Background}">
            <Grid x:Name="LayersGrid" SizeChanged="LayersGrid_SizeChanged">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" BorderBrush="{Binding Applied.Colors.Border}" BorderThickness="0,0,0,1" Background="{Binding Applied.Colors.Main}">
                    <Grid>
                        <Label HorizontalAlignment="Center">Rétegek</Label>
                        <Label x:Name="TotalEffectTimerLabel" HorizontalAlignment="Right" ToolTip="Total Eeffect Apply time...">- ms</Label>
                    </Grid>
                </Border>
                <ScrollViewer x:Name="LayersScroller" VerticalScrollBarVisibility="Auto" Grid.Row="1" MaxHeight="200">
                    <StackPanel x:Name="LayersPanel" Margin="5" VerticalAlignment="Top">
                        <Button>Some text</Button>
                        <Button>Some text</Button>
                        <Button>Some text</Button>
                        <Button>Some text</Button>
                        <Button>Some text</Button>
                    </StackPanel>
                </ScrollViewer>
                <Border Grid.Row="2" BorderBrush="{Binding Applied.Colors.Border}" BorderThickness="0,1,0,0" MinHeight="30">
                    <Button Content="Réteg hozzáadása" Click="NewLayer" HorizontalAlignment="Center" Margin="3" Width="150" Height="30"/>
                </Border>
            </Grid>
        </Border>
        -->
        
    </Grid>
</Window>
